package equivalencias;

public class Test2 
{	
	public static void main(String[] args) 
	{
		Carrera<Materia> c1 = new Carrera<Materia>("Tecnicatura en Informatica");
		Carrera<Materia> c2 = new Carrera<Materia>("Licenciatura en Sistemas");

		Materia m1 = new Materia("Introduccion a la Programacion");
		Materia m2 = new Materia("Introduccion a la Matematica");
		Materia m3 = new Materia("Programacion I");
		Materia m4 = new Materia("Organizacion del Computador");
		Materia m5 = new Materia("Ingles Lectocomprension I");
		Materia m6 = new Materia("Programacion II");
		Materia m7 = new Materia("Sistemas Operativos y Redes");
		Materia m8 = new Materia("Logica y Teoria de Numeros");
		Materia m9 = new Materia("Programacion III");
		Materia m10 = new Materia("Problemas Socioeconomicos Contemporaneos");
		Materia m11 = new Materia("Ingles Lectocomprension II");
		Materia m12 = new Materia("Gestion y Administracion de Base de Datos");
		Materia m13 = new Materia("Matematica Discreta");
		Materia m14 = new Materia("Ingles Lectocomprension III");
		Materia m15 = new Materia("Ingenieria de Software");
		Materia m16 = new Materia("Laboratorio de Construccion de Software");		
		Materia m17 = new Materia("Especificacion de Software");
		
		Materia m18 = new Materia("Taller de Lectoescritura");
		Materia m19 = new Materia("Organizacion del Computador I");
		Materia m20 = new Materia("Algebra Lineal");
		Materia m21 = new Materia("Sistemas Operativos y Redes I");
		Materia m22 = new Materia("Calculo para Computacion");
		Materia m23 = new Materia("Base de Datos I");
		Materia m24 = new Materia("Especificaciones y Verificación de Software");
		Materia m25 = new Materia("Teoría de la Computación");
		Materia m26 = new Materia("Ingeniería de Software I");
		Materia m27 = new Materia("Probabilidad y Estadística");
		Materia m28 = new Materia("Proyecto Profesional I");
		Materia m29 = new Materia("Ingeniería de Software II");
		Materia m30 = new Materia("Organización del Computador II");
		Materia m31 = new Materia("Proyecto Profesional II");
		Materia m32 = new Materia("Bases de Datos II");
		Materia m33 = new Materia("Sistemas Operativos y Redes II");
		Materia m34 = new Materia("Práctica Profesional Supervisada I");
		Materia m35 = new Materia("Modelado y Optimización");
		Materia m36 = new Materia("Informática y Sociedad");
		Materia m37 = new Materia("Práctica Profesional Supervisada II");
		Materia m38 = new Materia("Gestión de Proyectos");
		Materia m39 = new Materia("Laboratorio Interdisciplinario");
		Materia m40 = new Materia("Taller de Utilitarios");

		c1.agregarMateria(m1);
		c1.agregarMateria(m2);
		c1.agregarMateria(m3);
		c1.agregarMateria(m4);
		c1.agregarMateria(m5);
		c1.agregarMateria(m6);
		c1.agregarMateria(m7);
		c1.agregarMateria(m8);
		c1.agregarMateria(m9);
		c1.agregarMateria(m10);
		c1.agregarMateria(m11);
		c1.agregarMateria(m12);
		c1.agregarMateria(m13);
		c1.agregarMateria(m14);
		c1.agregarMateria(m15);
		c1.agregarMateria(m16);
		c1.agregarMateria(m17);
		
		c2.agregarMateria(m1);
		c2.agregarMateria(m2);
		c2.agregarMateria(m3);
		c2.agregarMateria(m5);
		c2.agregarMateria(m6);
		c2.agregarMateria(m8);
		c2.agregarMateria(m9);
		c2.agregarMateria(m10);
		c2.agregarMateria(m11);
		c2.agregarMateria(m13);
		c2.agregarMateria(m14);
		c2.agregarMateria(m18);
		c2.agregarMateria(m19);
		c2.agregarMateria(m20);
		c2.agregarMateria(m21);
		c2.agregarMateria(m22);
		c2.agregarMateria(m23);
		c2.agregarMateria(m24);
		c2.agregarMateria(m25);
		c2.agregarMateria(m26);
		c2.agregarMateria(m27);
		c2.agregarMateria(m28);
		c2.agregarMateria(m29);
		c2.agregarMateria(m30);
		c2.agregarMateria(m31);
		c2.agregarMateria(m32);
		c2.agregarMateria(m33);
		c2.agregarMateria(m34);
		c2.agregarMateria(m35);
		c2.agregarMateria(m36);
		c2.agregarMateria(m37);
		c2.agregarMateria(m38);
		c2.agregarMateria(m39);
		c2.agregarMateria(m40);
		
		c1.agregarCorrelatiblidad(m1, m3); 
		c1.agregarCorrelatiblidad(m3, m6); 
		c1.agregarCorrelatiblidad(m4, m7); 
		c1.agregarCorrelatiblidad(m2, m8); 
		c1.agregarCorrelatiblidad(m6, m9); 
		c1.agregarCorrelatiblidad(m5, m11); 
		c1.agregarCorrelatiblidad(m4, m12); 
		c1.agregarCorrelatiblidad(m8, m12); 
		c1.agregarCorrelatiblidad(m8, m13); 
		c1.agregarCorrelatiblidad(m8, m17); 
		c1.agregarCorrelatiblidad(m9, m15); 
		c1.agregarCorrelatiblidad(m9, m16);
		c1.agregarCorrelatiblidad(m11, m14); 
		
		c2.agregarCorrelatiblidad(m1, m3); 
		c2.agregarCorrelatiblidad(m2, m8); 
		c2.agregarCorrelatiblidad(m1, m19); 
		c2.agregarCorrelatiblidad(m3, m6); 
		c2.agregarCorrelatiblidad(m2, m20); 
		c2.agregarCorrelatiblidad(m19, m21); 
		c2.agregarCorrelatiblidad(m6, m9); 
		c2.agregarCorrelatiblidad(m2, m22); 
		c2.agregarCorrelatiblidad(m20, m22); 
		c2.agregarCorrelatiblidad(m8, m23); 
		c2.agregarCorrelatiblidad(m6, m23); 
		c2.agregarCorrelatiblidad(m19, m23); 
		c2.agregarCorrelatiblidad(m8, m13); 
		c2.agregarCorrelatiblidad(m22, m13); 
		c2.agregarCorrelatiblidad(m20, m13); 
		c2.agregarCorrelatiblidad(m8, m24); 
		c2.agregarCorrelatiblidad(m9, m24); 
		c2.agregarCorrelatiblidad(m9, m25); 
		c2.agregarCorrelatiblidad(m13, m25); 
		c2.agregarCorrelatiblidad(m19, m25); 
		c2.agregarCorrelatiblidad(m9, m26); 
		c2.agregarCorrelatiblidad(m22, m27); 
		c2.agregarCorrelatiblidad(m13, m27); 
		c2.agregarCorrelatiblidad(m23, m28);
		c2.agregarCorrelatiblidad(m26, m28); 
		c2.agregarCorrelatiblidad(m24, m28); 
		c2.agregarCorrelatiblidad(m26, m29); 
		c2.agregarCorrelatiblidad(m19, m30); 
		c2.agregarCorrelatiblidad(m28, m31); 
		c2.agregarCorrelatiblidad(m23, m32); 
		c2.agregarCorrelatiblidad(m9, m32); 
		c2.agregarCorrelatiblidad(m21, m33); 
		c2.agregarCorrelatiblidad(m31, m34); 
		c2.agregarCorrelatiblidad(m32, m34); 
		c2.agregarCorrelatiblidad(m27, m35); 
		c2.agregarCorrelatiblidad(m26, m36); 
		c2.agregarCorrelatiblidad(m34, m37); 
		c2.agregarCorrelatiblidad(m35, m37); 
		c2.agregarCorrelatiblidad(m29, m38); 
		c2.agregarCorrelatiblidad(m5, m11); 
		c2.agregarCorrelatiblidad(m11, m14); 
	
		System.out.println(c1.toString());
		System.out.println(c2.toString());
		System.out.println("NODO EN TECNICATURA CON MAYOR CANT CORRELATIVAS = " + c1.nodoConMayorNumeroDeNodosCorrelativos().toString());
		System.out.println("NODO EN LICENCIATURA CON MAYOR CANT CORRELATIVAS = "+ c2.nodoConMayorNumeroDeNodosCorrelativos().toString());
		System.out.println("LA TECNICATURA ES IGUAL A LA LICENCIATURA? = " + c1.equals(c2));			
		}
	}